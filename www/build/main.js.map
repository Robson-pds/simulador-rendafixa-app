{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/api/api.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 107;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 107\n// module chunks = 0","var map = {\n\t\"../pages/home/home.module\": [\n\t\t265,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 149;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 149\n// module chunks = 0","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions, Headers } from '@angular/http';\r\n\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n/*\r\n  Generated class for the ApiProvider provider.\r\n\r\n  See https://angular.io/guide/dependency-injection for more info on providers\r\n  and Angular DI.\r\n*/\r\n@Injectable()\r\n\r\nexport class ApiProvider {\r\n\r\n  baseUrl: string = \"https://easynvestsimulatorcalcapi.azurewebsites.net/calculator/simulate/\";\r\n\r\n  constructor(public http: Http) {\r\n    console.log('Hello ApiProvider Provider');\r\n  }\r\n\r\n  public simular(valor, cdi, data){\r\n    let headers = new Headers\r\n    headers.append('Content-Type','application/x-www-form-urlencoded');\r\n    headers.append('Access-Control-Allow-Methods','GET, POST, PATCH, PUT, DELETE, OPTIONS');\r\n    headers.append('Access-Control-Allow-Headers','Origin, Content-Type, X-Auth-Token, X-AMZ-META-TOKEN-ID, X-AMZ-META-TOKEN-SECRET');\r\n    let options = new RequestOptions({headers : headers});\r\n    //executa o método post na api, solicitando o novo token\r\n    this.http.get(`${this.baseUrl}/?investedAmount=${valor}&index=CDI&rate=${cdi}&isTaxFree=false&maturityDate=${data}`, options)\r\n        //mapear a função, retornando uma response (com os dados obtidos)\r\n        .map(res => res.json())\r\n        .subscribe(\r\n          //deu certo e trouxe resultado em JSON, transferi pra variavel \"data\" e poder ler cada campo do json\r\n          data=>{\r\n            alert(`                  Resultado da simulação: R$ ${data.grossAmount}\r\n                   Rendimento total de: R$ ${data.grossAmountProfit}\r\n\r\n                   Valor aplicado inicialmente: R$ ${data.investmentParameter.investedAmount}\r\n                   Valor bruto do investimento: R$ ${data.grossAmountProfit}\r\n                   Valor do rendimento: R$ ${data.grossAmountProfit}\r\n                   IR sobre o investimento: ${data.taxesAmount} (${data.taxesRate}%)\r\n                   Valor líquido do investimento: R$ ${data.netAmount}\r\n\r\n                   Data de resgate: ${data.investmentParameter.maturityDate}\r\n                   Dias corridos: ${data.investmentParameter.maturityTotalDays}\r\n                   Rendimento mensal: ${data.monthlyGrossRateProfit}%\r\n                   Percentual do CDI do papel: ${data.investmentParameter.rate}%\r\n                   Rentabilidade anual: ${data.investmentParameter.yearlyInterestRate}%\r\n                   Rentabilidade no período: ${data.annualGrossRateProfit}%\r\n                  `)\r\n          },\r\n          err=>{\r\n            alert(err);\r\n          }\r\n        );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { Http, HttpModule } from '@angular/http';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { ApiProvider } from '../providers/api/api';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp),\r\n    HttpModule\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    ApiProvider\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = 'HomePage';\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}